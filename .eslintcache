[{"/Users/macbookair/Downloads/techbasevn/src/index.js":"1","/Users/macbookair/Downloads/techbasevn/src/App.js":"2","/Users/macbookair/Downloads/techbasevn/src/containers/Home/components/ModalDetail/ModalDetail.js":"3","/Users/macbookair/Downloads/techbasevn/src/containers/Home/components/Country/Country.js":"4","/Users/macbookair/Downloads/techbasevn/src/containers/Home/index.js":"5","/Users/macbookair/Downloads/techbasevn/src/containers/Home/action.js":"6","/Users/macbookair/Downloads/techbasevn/src/containers/Home/components/InfoSummary/InfoSummary.js":"7"},{"size":500,"mtime":1610681118000,"results":"8","hashOfConfig":"9"},{"size":195,"mtime":1610809507000,"results":"10","hashOfConfig":"9"},{"size":1286,"mtime":1610855519000,"results":"11","hashOfConfig":"9"},{"size":4198,"mtime":1610890470000,"results":"12","hashOfConfig":"9"},{"size":1042,"mtime":1610809462000,"results":"13","hashOfConfig":"9"},{"size":738,"mtime":1610809335000,"results":"14","hashOfConfig":"9"},{"size":803,"mtime":1610852867000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"d53rvw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbookair/Downloads/techbasevn/src/index.js",[],["33","34"],"/Users/macbookair/Downloads/techbasevn/src/App.js",[],"/Users/macbookair/Downloads/techbasevn/src/containers/Home/components/ModalDetail/ModalDetail.js",[],"/Users/macbookair/Downloads/techbasevn/src/containers/Home/components/Country/Country.js",["35","36","37","38","39","40"],"import React, {useState, useEffect} from 'react';\nimport { Menu, Dropdown, Button, Table, Alert } from 'antd';\nimport ModalDetail from '../ModalDetail/ModalDetail';\nimport { DownOutlined } from '@ant-design/icons';\nimport './Country.css';\nimport 'antd/dist/antd.css';\n\nconst Country = (props) => {\n  const {\n    listCountry,\n  } = props\n  const [selectCountry, setSelectCountry] = useState(null)\n  const [countryInfo, setCountryInfo] = useState(null)\n  const [visible, setVisible] = useState(false)\n  const [infoDetail, setInfoDetail] = useState(null)\n  const [status, setStatus] = useState(null)\n\n  useEffect(() => {\n    if (selectCountry === null) return\n\n    setInfoDetail(null)\n    return setCountryInfo(listCountry.filter(e => e.Country === selectCountry))\n  }, [selectCountry, listCountry])\n\n  const menu = (\n    <Menu>\n      {listCountry && listCountry.map(country => {\n        return (\n          <Menu.Item key={`country_${country.ID}`} onClick={() => setSelectCountry(country.Country)}> \n              {country.Country}\n            </Menu.Item>\n          )\n        })\n      }\n    </Menu>\n  );\n\n  const onhandleDetail = (status, type) => {\n    fetch(`https://api.covid19api.com/dayone/country/${selectCountry}/status/${status}`, {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n      mode: \"cors\",\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response?.message === 'Not Found') return setInfoDetail(response?.message)\n\n      if (type === 'new') {\n        setInfoDetail([response[response.length - 1]])\n      } else {\n        setInfoDetail(response)\n      }\n      setVisible(true)\n      setStatus(status)\n    })\n    .catch(error => {\n      console.log(error)\n    });\n  }\n\n  const columns = [\n    {\n      title: 'New Confirmed',\n      dataIndex: 'NewConfirmed',\n      key: 'NewConfirmed',\n      render: number => <a href=\"#\" onClick={() => onhandleDetail('confirmed', 'new')}>{number}</a>,\n    },\n    {\n      title: 'New Deaths',\n      dataIndex: 'NewDeaths',\n      key: 'NewDeaths',\n      render: number => <a href=\"#\" onClick={() => onhandleDetail('deaths', 'new')}>{number}</a>,\n    },\n    {\n      title: 'New Recovered',\n      dataIndex: 'NewRecovered',\n      key: 'NewRecovered',\n      render: number => <a href=\"#\" onClick={() => onhandleDetail('recovered', 'new')}>{number}</a>,\n    },\n    {\n      title: 'Total Confirmed',\n      dataIndex: 'TotalConfirmed',\n      key: 'TotalConfirmed',\n      render: number => <a href=\"#\" onClick={() => onhandleDetail('confirmed', 'total')}>{number}</a>,\n    },\n    {\n      title: 'Total Deaths',\n      dataIndex: 'TotalDeaths',\n      key: 'TotalDeaths',\n      render: number => <a href=\"#\" onClick={() => onhandleDetail('deaths', 'total')}>{number}</a>,\n    },\n    {\n      title: 'Total Recovered',\n      dataIndex: 'TotalRecovered',\n      key: 'TotalRecovered',\n      render: number => <a href=\"#\" onClick={() => onhandleDetail('recovered', 'total')}>{number}</a>,\n    },\n  ];\n\n  const onClose = () => {\n    setVisible(false)\n    setInfoDetail(null)\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"list_country\">\n        <h2>Information of covid-19 in </h2>\n        <Dropdown \n          overlay={menu} \n          trigger={['click']}\n          overlayClassName=\"list-country-dropdown\"\n        >\n          <Button>\n            {selectCountry === null ? 'Choose Country' : selectCountry}\n            <DownOutlined />\n          </Button>\n        </Dropdown>\n      </div>\n\n      {countryInfo !== null &&\n        <div className=\"country_detail\">\n          <Table columns={columns} dataSource={countryInfo} pagination={false} rowKey=\"ID\" />\n          <div className=\"note\">* Click the number to see more details</div>\n        </div>\n      }\n\n      {infoDetail === 'Not Found' && <Alert message=\"Something went wrong.\" type=\"error\" />}\n\n      {visible && infoDetail !== null && <ModalDetail \n        visible={visible}\n        onCancel={onClose}\n        infoDetail={infoDetail}\n        status={status}\n        selectCountry={selectCountry}\n      />}\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Country);\n","/Users/macbookair/Downloads/techbasevn/src/containers/Home/index.js",["41"],"import React, { useEffect } from 'react';\nimport InfoSummary from './components/InfoSummary/InfoSummary';\nimport Country from './components/Country/Country';\nimport { Divider } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useFetchData } from './action';\nimport './index.css';\n\nconst Home = () => {\n    const [dataGlobal, apiMethod] = useFetchData();\n\n    useEffect(() => {\n        apiMethod()\n    }, [])\n\n    if (dataGlobal.data === null) {\n        return (\n            <div className=\"loading_page\">\n                <div className=\"loading_wrap\">\n                    <p>Loading</p>\n                    <LoadingOutlined />\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"full-page\">\n            <div className=\"page-wrap\">\n                <InfoSummary dataGlobal={dataGlobal.data.Global}/>\n\n                <Divider />\n\n                <Country listCountry={dataGlobal.data.Countries}/>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(Home);\n","/Users/macbookair/Downloads/techbasevn/src/containers/Home/action.js",[],"/Users/macbookair/Downloads/techbasevn/src/containers/Home/components/InfoSummary/InfoSummary.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":69,"column":25,"nodeType":"48","endLine":69,"endColumn":88},{"ruleId":"46","severity":1,"message":"47","line":75,"column":25,"nodeType":"48","endLine":75,"endColumn":85},{"ruleId":"46","severity":1,"message":"47","line":81,"column":25,"nodeType":"48","endLine":81,"endColumn":88},{"ruleId":"46","severity":1,"message":"47","line":87,"column":25,"nodeType":"48","endLine":87,"endColumn":90},{"ruleId":"46","severity":1,"message":"47","line":93,"column":25,"nodeType":"48","endLine":93,"endColumn":87},{"ruleId":"46","severity":1,"message":"47","line":99,"column":25,"nodeType":"48","endLine":99,"endColumn":90},{"ruleId":"49","severity":1,"message":"50","line":14,"column":8,"nodeType":"51","endLine":14,"endColumn":10,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiMethod'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [apiMethod]",{"range":"58","text":"59"},[430,432],"[apiMethod]"]